{"version":3,"file":"static/js/426.6097aedb.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ListOfMovies/ListOfMovies.module.css?d8fe","components/ListOfMovies/ListOfMovies.jsx","webpack://react-homework-template/./src/components/SearchMovies/SearchForm/SearchForm.module.css?1e04","components/SearchMovies/SearchForm/SearchForm.jsx","components/SearchMovies/NoFeedback/NoFeedback.jsx","components/SearchMovies/SearchMovies.jsx","pages/Movies.jsx","services/moviesdbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ListOfMovies_list__ncdBg\",\"listItem\":\"ListOfMovies_listItem__O7Bf0\",\"itemLink\":\"ListOfMovies_itemLink__cLAGG\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './ListOfMovies.module.css';\n\nexport const ListOfMovies = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {movies.map(({ id, title }) => (\n        <li key={id} className={css.listItem}>\n          <Link\n            to={`/movies/${id}`}\n            state={{ from: location }}\n            className={css.itemLink}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListOfMovies.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"from\":\"SearchForm_from__Kd5I6\",\"input\":\"SearchForm_input__Fx5Ik\",\"submitBtn\":\"SearchForm_submitBtn__9ytmC\",\"noFeedbackMess\":\"SearchForm_noFeedbackMess__wuMKf\"};","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = evt => {\n    const { value } = evt.currentTarget;\n    setInputValue(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    if (inputValue.trim() === '') {\n      toast.error('Nothing to search!', {\n        position: 'bottom-right',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n\n    onSubmit(inputValue);\n    setInputValue('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.from}>\n      <input\n        type=\"text\"\n        placeholder=\"Search films\"\n        value={inputValue}\n        autoFocus\n        onChange={handleChange}\n        autoComplete=\"off\"\n        className={css.input}\n      />\n      <button type=\"submit\" className={css.submitBtn}>\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport css from '../SearchForm/SearchForm.module.css';\n\nexport const NoFeedback = ({ search }) => (\n  <p className={css.noFeedbackMess}>\n    There is no movies matching your query: '{search}'\n  </p>\n);\n\nNoFeedback.propTypes = {\n    search: PropTypes.string.isRequired,\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { ListOfMovies } from 'components/ListOfMovies/ListOfMovies';\nimport { searchMovies } from 'services/moviesdbAPI';\nimport { useState, useEffect } from 'react';\nimport { SearchForm } from './SearchForm/SearchForm';\nimport { NoFeedback } from './NoFeedback/NoFeedback';\n\nexport const SearchMovies = () => {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useSearchParams();\n  const query = search.get('query') ?? '';\n\n  const handleSubmit = result => {\n    setSearch(result !== '' ? { query: result } : {});\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    try {\n      searchMovies(query).then(resp => setMovies(resp));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [query]);\n\n  return (\n    <div>\n      <SearchForm onSubmit={handleSubmit} />\n      {movies.length === 0 && query !== '' && <NoFeedback search={query} />}\n      {movies.length !== 0 && <ListOfMovies movies={movies} />}\n    </div>\n  );\n};\n","import { SearchMovies } from 'components/SearchMovies/SearchMovies';\n\nconst Movies = () => {\n  return <SearchMovies />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3`;\nconst API_KEY = `?api_key=158ad78a017acca92c1d8a0f66634ca7`;\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day${API_KEY}`);\n  return response.data.results.map(({ id, title }) => {\n    return {\n      id,\n      title,\n    };\n  });\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data.results.map(({id, title}) => {\n    return {\n      id,\n      title,\n    }\n  });\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};"],"names":["ListOfMovies","movies","location","useLocation","className","css","map","id","title","to","state","from","SearchForm","onSubmit","useState","inputValue","setInputValue","evt","preventDefault","trim","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","type","placeholder","value","autoFocus","onChange","currentTarget","autoComplete","NoFeedback","search","SearchMovies","setMovies","useSearchParams","setSearch","query","get","useEffect","searchMovies","then","resp","error","console","log","result","length","axios","API_KEY","getTrending","response","data","results","getMovieDetails","movieId","getMovieCredits","getMovieReviews"],"sourceRoot":""}